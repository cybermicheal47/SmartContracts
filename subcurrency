pragma solidity ^0.8.4;


//the contract allows only the creator to  create new coins
//anyone can send coin to each other without the need for registering, all they new need is the ethereum keypair


contract Coin {
    address public minter;
    mapping(address => uint) public balances;
    
    event Sent(address from, address to, uint amount); 
    
    //constructor only runs when we deploy contracts
    
    constructor() {
        minter = msg.sender;
 
 
    }
//make coins and send them to the address
function mint(address  receiver, uint amount) public {
    require(msg.sender == minter);
    balances[receiver] += amount;
    
}

//send any amount of coins 
//to an existing address

error insufficientBalance(uint requested , uint available);


 function send (address receiver, uint amount) public{
     if (amount > balances [msg.sender])
     revert insufficientBalance({
         requested: amount,
         
         available : balances[msg.sender]
     
        } );
     balances[msg.sender] -=  amount ;
     balances[receiver]  += amount;
     emit Sent(msg.sender, receiver, amount);
 }
    
}



